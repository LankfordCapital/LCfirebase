rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to upload profile photos to their own folder
    match /profile-photos/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload documents to their own folder
    match /documents/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload loan application documents
    match /loan-applications/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow brokers to read documents from their borrowers
    match /borrower-documents/{borrowerId}/{allPaths=**} {
      allow read: if request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['broker', 'workforce', 'admin'];
      allow write: if request.auth != null && request.auth.uid == borrowerId;
    }
    
    // Allow workforce and admin to read all documents
    match /{allPaths=**} {
      allow read, write: if request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['workforce', 'admin'];
    }
  }
}
