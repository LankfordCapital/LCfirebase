
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow users to read and write their own documents
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Allow workforce members to manage appointments
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['workforce', 'admin'];
    }

    // Allow anyone to create an appointment (for public booking pages)
    match /appointments/{appointmentId} {
        allow create: if true;
    }

    // Allow workforce members to manage lenders
    match /lenders/{lenderId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['workforce', 'admin'];
    }

    // Allow workforce members to manage amcs
    match /amcs/{amcId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['workforce', 'admin'];
    }

    // Allow workforce members to manage internal docs
    match /workforce-docs/{docId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['workforce', 'admin'];
    }

    // Rules for chat rooms
    match /chats/{roomId}/messages/{messageId} {
      allow read, create: if request.auth != null;
    }
  }
}
